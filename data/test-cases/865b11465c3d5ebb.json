{
  "uid" : "865b11465c3d5ebb",
  "name" : "test_faqLink",
  "fullName" : "test_regression_suite.FooterTests#test_faqLink",
  "historyId" : "7a51873bd392916254582a61f677b26e",
  "time" : {
    "start" : 1589255118618,
    "stop" : 1589255119486,
    "duration" : 868
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_faqLink>\n\n    def test_faqLink(self):\n        result = self.fp.getFAQLinkStatus()\n>       self.ts.markFinal(\"test_faqLink\", result, \"Footer_Verified FAQ Link\")\n\nhome\\footer_test.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utilities.casestatus.CaseStatus object at 0x0461D930>\ntestName = 'test_faqLink', result = False\nresultMessage = 'Footer_Verified FAQ Link'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName + \" Test Failed\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\utilities\\casestatus.py:74: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1589255098291,
      "stop" : 1589255098291,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "oneTimeSetUp",
    "time" : {
      "start" : 1589255098291,
      "stop" : 1589255112136,
      "duration" : 13845
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "classSetUp",
    "time" : {
      "start" : 1589255118617,
      "stop" : 1589255118617,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1589255098290,
      "stop" : 1589255098291,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_faqLink>\n\n    def test_faqLink(self):\n        result = self.fp.getFAQLinkStatus()\n>       self.ts.markFinal(\"test_faqLink\", result, \"Footer_Verified FAQ Link\")\n\nhome\\footer_test.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utilities.casestatus.CaseStatus object at 0x0461D930>\ntestName = 'test_faqLink', result = False\nresultMessage = 'Footer_Verified FAQ Link'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName + \" Test Failed\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\utilities\\casestatus.py:74: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d7e9cd6423383714",
      "name" : "Footer_Verified FAQ Link.1589255119482",
      "source" : "d7e9cd6423383714.png",
      "type" : "image/png",
      "size" : 41938
    }, {
      "uid" : "b7732a708051eab8",
      "name" : "log",
      "source" : "b7732a708051eab8.txt",
      "type" : "text/plain",
      "size" : 1397
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "oneTimeSetUp::0",
    "time" : {
      "start" : 1589255134353,
      "stop" : 1589255136655,
      "duration" : 2302
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1589255136665,
      "stop" : 1589255136665,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_regression_suite"
  }, {
    "name" : "subSuite",
    "value" : "FooterTests"
  }, {
    "name" : "host",
    "value" : "EXIPC0154"
  }, {
    "name" : "thread",
    "value" : "7652-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_regression_suite"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "fc4e99a94556fa34",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589253203306,
        "stop" : 1589253204173,
        "duration" : 867
      }
    }, {
      "uid" : "26197f6e097fa514",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589216117824,
        "stop" : 1589216118783,
        "duration" : 959
      }
    }, {
      "uid" : "2e7daf43806a295",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589207723649,
        "stop" : 1589207724402,
        "duration" : 753
      }
    }, {
      "uid" : "24879314b5123a8",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589206272612,
        "stop" : 1589206273394,
        "duration" : 782
      }
    }, {
      "uid" : "d906692ad9e9ecab",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589205347782,
        "stop" : 1589205348914,
        "duration" : 1132
      }
    }, {
      "uid" : "d5a94be2e7fd7727",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589203297521,
        "stop" : 1589203298426,
        "duration" : 905
      }
    }, {
      "uid" : "e7d4e4012059c9ba",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589163790054,
        "stop" : 1589163790859,
        "duration" : 805
      }
    }, {
      "uid" : "1f40e25160624609",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589113057538,
        "stop" : 1589113058824,
        "duration" : 1286
      }
    }, {
      "uid" : "3801f2079143eaeb",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588853660545,
        "stop" : 1588853661308,
        "duration" : 763
      }
    }, {
      "uid" : "9f99941c9ddfe71e",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588852335340,
        "stop" : 1588852336303,
        "duration" : 963
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "5ca00ff01dff6984",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/26/allure/#testresult/5ca00ff01dff6984",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589253203306,
          "stop" : 1589253204173,
          "duration" : 867
        }
      }, {
        "uid" : "cbdc1d9705dabf83",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/25/allure/#testresult/cbdc1d9705dabf83",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589216117824,
          "stop" : 1589216118783,
          "duration" : 959
        }
      }, {
        "uid" : "751a3f4474eaecca",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/24/allure/#testresult/751a3f4474eaecca",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589207723649,
          "stop" : 1589207724402,
          "duration" : 753
        }
      }, {
        "uid" : "59b2de8605d1d824",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/23/allure/#testresult/59b2de8605d1d824",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589206272612,
          "stop" : 1589206273394,
          "duration" : 782
        }
      }, {
        "uid" : "b261b921f88166ee",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/22/allure/#testresult/b261b921f88166ee",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589205347782,
          "stop" : 1589205348914,
          "duration" : 1132
        }
      }, {
        "uid" : "ced878e9cf27e376",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/21/allure/#testresult/ced878e9cf27e376",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589203297521,
          "stop" : 1589203298426,
          "duration" : 905
        }
      }, {
        "uid" : "e6cef2d6d76ea6c7",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/20/allure/#testresult/e6cef2d6d76ea6c7",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589163790054,
          "stop" : 1589163790859,
          "duration" : 805
        }
      }, {
        "uid" : "dbcca2ae45d4bf00",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/19/allure/#testresult/dbcca2ae45d4bf00",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589113057538,
          "stop" : 1589113058824,
          "duration" : 1286
        }
      }, {
        "uid" : "20ce9c5f95eb8594",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/18/allure/#testresult/20ce9c5f95eb8594",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1588853660545,
          "stop" : 1588853661308,
          "duration" : 763
        }
      }, {
        "uid" : "15ebd08f7a582b51",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/17/allure/#testresult/15ebd08f7a582b51",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1588852335340,
          "stop" : 1588852336303,
          "duration" : 963
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "865b11465c3d5ebb.json",
  "parameterValues" : [ ]
}