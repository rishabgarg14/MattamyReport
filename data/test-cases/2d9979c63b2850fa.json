{
  "uid" : "2d9979c63b2850fa",
  "name" : "test_investorsLink",
  "fullName" : "test_regression_suite.FooterTests#test_investorsLink",
  "historyId" : "a425b0857a6827e86c480ff15aae7909",
  "time" : {
    "start" : 1590654724806,
    "stop" : 1590654748875,
    "duration" : 24069
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: chrome not reachable\n  (Session info: chrome=81.0.4044.138)",
  "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_investorsLink>\n\n    def setUp(self):\n>       self.fp.scrollToFooter()\n\nhome\\footer_test.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\home\\footer_page.py:36: in scrollToFooter\n    self.webScroll(element=element)\n..\\base\\selenium_driver.py:283: in webScroll\n    self.driver.execute_script(\"window.scrollBy(0, -1000);\")\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:634: in execute_script\n    return self.execute(command, {\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000251D01CEE50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"chrome not reachable\",\"message\":\"chrome not reachable\\\\n  (Session info: ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77BC7B74+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77BC7B44+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: chrome not reachable\nE         (Session info: chrome=81.0.4044.138)\n\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "classSetUp",
    "time" : {
      "start" : 1590654724805,
      "stop" : 1590654724805,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "oneTimeSetUp",
    "time" : {
      "start" : 1590654488360,
      "stop" : 1590654502392,
      "duration" : 14032
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1590654488359,
      "stop" : 1590654488360,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1590654488360,
      "stop" : 1590654488360,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: chrome not reachable\n  (Session info: chrome=81.0.4044.138)",
    "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_investorsLink>\n\n    def setUp(self):\n>       self.fp.scrollToFooter()\n\nhome\\footer_test.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\home\\footer_page.py:36: in scrollToFooter\n    self.webScroll(element=element)\n..\\base\\selenium_driver.py:283: in webScroll\n    self.driver.execute_script(\"window.scrollBy(0, -1000);\")\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:634: in execute_script\n    return self.execute(command, {\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000251D01CEE50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"chrome not reachable\",\"message\":\"chrome not reachable\\\\n  (Session info: ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77BC7B74+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77BC7B44+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: chrome not reachable\nE         (Session info: chrome=81.0.4044.138)\n\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a8b172719cdca290",
      "name" : "log",
      "source" : "a8b172719cdca290.txt",
      "type" : "text/plain",
      "size" : 251
    }, {
      "uid" : "3254ebd84986fa61",
      "name" : "stdout",
      "source" : "3254ebd84986fa61.txt",
      "type" : "text/plain",
      "size" : 70
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "oneTimeSetUp::0",
    "time" : {
      "start" : 1590654870186,
      "stop" : 1590654872310,
      "duration" : 2124
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1590654872317,
      "stop" : 1590654872317,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_regression_suite"
  }, {
    "name" : "subSuite",
    "value" : "FooterTests"
  }, {
    "name" : "host",
    "value" : "EXIPC0154"
  }, {
    "name" : "thread",
    "value" : "2720-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_regression_suite"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "e31a05e1037e7a21",
      "status" : "passed",
      "time" : {
        "start" : 1590568878470,
        "stop" : 1590568879822,
        "duration" : 1352
      }
    }, {
      "uid" : "a4c673f17a4f3b99",
      "status" : "passed",
      "time" : {
        "start" : 1590405791801,
        "stop" : 1590405793325,
        "duration" : 1524
      }
    }, {
      "uid" : "8820e31bb4e106bc",
      "status" : "passed",
      "time" : {
        "start" : 1590404507565,
        "stop" : 1590404508957,
        "duration" : 1392
      }
    }, {
      "uid" : "30e67909474f5f6",
      "status" : "passed",
      "time" : {
        "start" : 1590404444794,
        "stop" : 1590404446574,
        "duration" : 1780
      }
    }, {
      "uid" : "16462bd5380cddce",
      "status" : "passed",
      "time" : {
        "start" : 1589610674522,
        "stop" : 1589610676877,
        "duration" : 2355
      }
    }, {
      "uid" : "757a1983f8422872",
      "status" : "passed",
      "time" : {
        "start" : 1589609682926,
        "stop" : 1589609686301,
        "duration" : 3375
      }
    }, {
      "uid" : "66efd011b067c510",
      "status" : "passed",
      "time" : {
        "start" : 1589609431857,
        "stop" : 1589609433357,
        "duration" : 1500
      }
    }, {
      "uid" : "ae9ce8c4625c65ad",
      "status" : "passed",
      "time" : {
        "start" : 1589608972962,
        "stop" : 1589608974892,
        "duration" : 1930
      }
    }, {
      "uid" : "e142e4703efdd553",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: 'chromedriver.exe' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home",
      "time" : {
        "start" : 1589607869711,
        "stop" : 1589607869711,
        "duration" : 0
      }
    }, {
      "uid" : "6a70004f4a7740e3",
      "status" : "passed",
      "time" : {
        "start" : 1589606505383,
        "stop" : 1589606506811,
        "duration" : 1428
      }
    }, {
      "uid" : "6b27e92d6b1647cc",
      "status" : "passed",
      "time" : {
        "start" : 1589597907136,
        "stop" : 1589597908602,
        "duration" : 1466
      }
    }, {
      "uid" : "6cb4f623391cdb05",
      "status" : "passed",
      "time" : {
        "start" : 1589596693372,
        "stop" : 1589596694664,
        "duration" : 1292
      }
    }, {
      "uid" : "4b97f25d75cd637d",
      "status" : "passed",
      "time" : {
        "start" : 1589534534230,
        "stop" : 1589534537793,
        "duration" : 3563
      }
    }, {
      "uid" : "85329feaaf3cff15",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589469157113,
        "stop" : 1589469158561,
        "duration" : 1448
      }
    }, {
      "uid" : "cd256fc75a0444fc",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589386792261,
        "stop" : 1589386793398,
        "duration" : 1137
      }
    }, {
      "uid" : "2e01c3267dabb2cd",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589272114787,
        "stop" : 1589272121335,
        "duration" : 6548
      }
    }, {
      "uid" : "b9f5f75726ee1abb",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589258687662,
        "stop" : 1589258688879,
        "duration" : 1217
      }
    }, {
      "uid" : "c7d88bbbfa95f703",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589258574773,
        "stop" : 1589258575978,
        "duration" : 1205
      }
    }, {
      "uid" : "c27225ff59d5daf0",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589255124464,
        "stop" : 1589255125345,
        "duration" : 881
      }
    }, {
      "uid" : "2860b386b40997e",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589253208690,
        "stop" : 1589253209868,
        "duration" : 1178
      }
    }, {
      "uid" : "1f87ef95319fea14",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589216122900,
        "stop" : 1589216123746,
        "duration" : 846
      }
    }, {
      "uid" : "96fe2af15de7cdc1",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589207730291,
        "stop" : 1589207731086,
        "duration" : 795
      }
    }, {
      "uid" : "15e29e0f4f3d6137",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589206279918,
        "stop" : 1589206280809,
        "duration" : 891
      }
    }, {
      "uid" : "f71d6e1d0aa4fc60",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589205354758,
        "stop" : 1589205355580,
        "duration" : 822
      }
    }, {
      "uid" : "1b873113220cd6d",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589203303390,
        "stop" : 1589203304243,
        "duration" : 853
      }
    }, {
      "uid" : "c92192d9f83e6a41",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589163795309,
        "stop" : 1589163796178,
        "duration" : 869
      }
    }, {
      "uid" : "87087152c12f54aa",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589113064192,
        "stop" : 1589113065137,
        "duration" : 945
      }
    }, {
      "uid" : "f9c26f19e7825f48",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588853668400,
        "stop" : 1588853669193,
        "duration" : 793
      }
    }, {
      "uid" : "6aaf38bca56da967",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588852341586,
        "stop" : 1588852342493,
        "duration" : 907
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 15,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 30
      },
      "items" : [ {
        "uid" : "837cb6c8bd5e0565",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/48/allure/#testresult/837cb6c8bd5e0565",
        "status" : "passed",
        "time" : {
          "start" : 1590568878470,
          "stop" : 1590568879822,
          "duration" : 1352
        }
      }, {
        "uid" : "5a5021cb822e664",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/47/allure/#testresult/5a5021cb822e664",
        "status" : "passed",
        "time" : {
          "start" : 1590405791801,
          "stop" : 1590405793325,
          "duration" : 1524
        }
      }, {
        "uid" : "495bde89c234a633",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/46/allure/#testresult/495bde89c234a633",
        "status" : "passed",
        "time" : {
          "start" : 1590405791801,
          "stop" : 1590405793325,
          "duration" : 1524
        }
      }, {
        "uid" : "7a2f79127cf6413d",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/45/allure/#testresult/7a2f79127cf6413d",
        "status" : "passed",
        "time" : {
          "start" : 1590404507565,
          "stop" : 1590404508957,
          "duration" : 1392
        }
      }, {
        "uid" : "f7bc283f2a618b43",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/43/allure/#testresult/f7bc283f2a618b43",
        "status" : "passed",
        "time" : {
          "start" : 1589610674522,
          "stop" : 1589610676877,
          "duration" : 2355
        }
      }, {
        "uid" : "2af61881684afff",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/42/allure/#testresult/2af61881684afff",
        "status" : "passed",
        "time" : {
          "start" : 1589610674522,
          "stop" : 1589610676877,
          "duration" : 2355
        }
      }, {
        "uid" : "1d6c7c8409ad0b48",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/41/allure/#testresult/1d6c7c8409ad0b48",
        "status" : "passed",
        "time" : {
          "start" : 1589609682926,
          "stop" : 1589609686301,
          "duration" : 3375
        }
      }, {
        "uid" : "692ea9f4cbff52b0",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/40/allure/#testresult/692ea9f4cbff52b0",
        "status" : "passed",
        "time" : {
          "start" : 1589609431857,
          "stop" : 1589609433357,
          "duration" : 1500
        }
      }, {
        "uid" : "e5648d54d87a7fce",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/39/allure/#testresult/e5648d54d87a7fce",
        "status" : "passed",
        "time" : {
          "start" : 1589608972962,
          "stop" : 1589608974892,
          "duration" : 1930
        }
      }, {
        "uid" : "d05b3a106a15be0a",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/37/allure/#testresult/d05b3a106a15be0a",
        "status" : "passed",
        "time" : {
          "start" : 1589606505383,
          "stop" : 1589606506811,
          "duration" : 1428
        }
      }, {
        "uid" : "4e054ecad394af98",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/36/allure/#testresult/4e054ecad394af98",
        "status" : "passed",
        "time" : {
          "start" : 1589597907136,
          "stop" : 1589597908602,
          "duration" : 1466
        }
      }, {
        "uid" : "831d225ab5706122",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/35/allure/#testresult/831d225ab5706122",
        "status" : "passed",
        "time" : {
          "start" : 1589596693372,
          "stop" : 1589596694664,
          "duration" : 1292
        }
      }, {
        "uid" : "149218b03cb80d5d",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/34/allure/#testresult/149218b03cb80d5d",
        "status" : "passed",
        "time" : {
          "start" : 1589534534230,
          "stop" : 1589534537793,
          "duration" : 3563
        }
      }, {
        "uid" : "efde3ac3558c6c7",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/33/allure/#testresult/efde3ac3558c6c7",
        "status" : "passed",
        "time" : {
          "start" : 1589534534230,
          "stop" : 1589534537793,
          "duration" : 3563
        }
      }, {
        "uid" : "44debc9f15ca89b7",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/32/allure/#testresult/44debc9f15ca89b7",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589469157113,
          "stop" : 1589469158561,
          "duration" : 1448
        }
      }, {
        "uid" : "5d5a920aede31340",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/31/allure/#testresult/5d5a920aede31340",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589386792261,
          "stop" : 1589386793398,
          "duration" : 1137
        }
      }, {
        "uid" : "1634664725dc2ac",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/30/allure/#testresult/1634664725dc2ac",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589272114787,
          "stop" : 1589272121335,
          "duration" : 6548
        }
      }, {
        "uid" : "40fba29439480464",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/28/allure/#testresult/40fba29439480464",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589258574773,
          "stop" : 1589258575978,
          "duration" : 1205
        }
      }, {
        "uid" : "27af0908a7c2d08b",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/27/allure/#testresult/27af0908a7c2d08b",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589255124464,
          "stop" : 1589255125345,
          "duration" : 881
        }
      }, {
        "uid" : "a55ec68ec4a5ba46",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/26/allure/#testresult/a55ec68ec4a5ba46",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589253208690,
          "stop" : 1589253209868,
          "duration" : 1178
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2d9979c63b2850fa.json",
  "parameterValues" : [ ]
}