{
  "uid" : "bfcdc1b06c5bcf3",
  "name" : "test_emailSignupLink",
  "fullName" : "test_regression_suite.FooterTests#test_emailSignupLink",
  "historyId" : "960a8c3a779ce8e87f3141841fa42fc2",
  "time" : {
    "start" : 1589253200896,
    "stop" : 1589253201687,
    "duration" : 791
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_emailSignupLink>\n\n    def test_emailSignupLink(self):\n        result = self.fp.getEmailSignupLinkStatus()\n>       self.ts.markFinal(\"test_emailSignupLink\", result, \"Footer_Verified Homeowners Link\")\n\nhome\\footer_test.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utilities.casestatus.CaseStatus object at 0x02C5F690>\ntestName = 'test_emailSignupLink', result = False\nresultMessage = 'Footer_Verified Homeowners Link'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName + \" Test Failed\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\utilities\\casestatus.py:74: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1589253181741,
      "stop" : 1589253181741,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1589253181741,
      "stop" : 1589253181741,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "classSetUp",
    "time" : {
      "start" : 1589253200895,
      "stop" : 1589253200895,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "oneTimeSetUp",
    "time" : {
      "start" : 1589253181741,
      "stop" : 1589253197719,
      "duration" : 15978
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_emailSignupLink>\n\n    def test_emailSignupLink(self):\n        result = self.fp.getEmailSignupLinkStatus()\n>       self.ts.markFinal(\"test_emailSignupLink\", result, \"Footer_Verified Homeowners Link\")\n\nhome\\footer_test.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utilities.casestatus.CaseStatus object at 0x02C5F690>\ntestName = 'test_emailSignupLink', result = False\nresultMessage = 'Footer_Verified Homeowners Link'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName + \" Test Failed\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\utilities\\casestatus.py:74: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dd1338810f88096a",
      "name" : "Footer_Verified Homeowners Link.1589253201685",
      "source" : "dd1338810f88096a.png",
      "type" : "image/png",
      "size" : 26234
    }, {
      "uid" : "f3c28ecf42eb6a9b",
      "name" : "log",
      "source" : "f3c28ecf42eb6a9b.txt",
      "type" : "text/plain",
      "size" : 1437
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1589253222205,
      "stop" : 1589253222205,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "oneTimeSetUp::0",
    "time" : {
      "start" : 1589253220102,
      "stop" : 1589253222196,
      "duration" : 2094
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_regression_suite"
  }, {
    "name" : "subSuite",
    "value" : "FooterTests"
  }, {
    "name" : "host",
    "value" : "EXIPC0154"
  }, {
    "name" : "thread",
    "value" : "16504-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_regression_suite"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "65c4a2c16dfe1df1",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589216115552,
        "stop" : 1589216116339,
        "duration" : 787
      }
    }, {
      "uid" : "269bcfc250125818",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589207720717,
        "stop" : 1589207721509,
        "duration" : 792
      }
    }, {
      "uid" : "4bdbfb3f1acfaffd",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589206269599,
        "stop" : 1589206270360,
        "duration" : 761
      }
    }, {
      "uid" : "fff9a57634ef696b",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589205345033,
        "stop" : 1589205346386,
        "duration" : 1353
      }
    }, {
      "uid" : "ce8e82207fbb81a6",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589203294624,
        "stop" : 1589203295473,
        "duration" : 849
      }
    }, {
      "uid" : "b498cfb7d8f3f496",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589163787523,
        "stop" : 1589163788365,
        "duration" : 842
      }
    }, {
      "uid" : "b19ebfd76fda1e0c",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589113054099,
        "stop" : 1589113055726,
        "duration" : 1627
      }
    }, {
      "uid" : "ce14838a52cecda",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588853652460,
        "stop" : 1588853653365,
        "duration" : 905
      }
    }, {
      "uid" : "9b791e1a0efced3a",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588852332490,
        "stop" : 1588852333939,
        "duration" : 1449
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 10,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "3b8140c5f694729b",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/25/allure/#testresult/3b8140c5f694729b",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589216115552,
          "stop" : 1589216116339,
          "duration" : 787
        }
      }, {
        "uid" : "96a24ff7d8cd692e",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/24/allure/#testresult/96a24ff7d8cd692e",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589207720717,
          "stop" : 1589207721509,
          "duration" : 792
        }
      }, {
        "uid" : "efe063c8249d3b9",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/23/allure/#testresult/efe063c8249d3b9",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589206269599,
          "stop" : 1589206270360,
          "duration" : 761
        }
      }, {
        "uid" : "3c9773b777a6c261",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/22/allure/#testresult/3c9773b777a6c261",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589205345033,
          "stop" : 1589205346386,
          "duration" : 1353
        }
      }, {
        "uid" : "cf55ce7ae4f93dd8",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/21/allure/#testresult/cf55ce7ae4f93dd8",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589203294624,
          "stop" : 1589203295473,
          "duration" : 849
        }
      }, {
        "uid" : "598173bc8eb0fb80",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/20/allure/#testresult/598173bc8eb0fb80",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589163787523,
          "stop" : 1589163788365,
          "duration" : 842
        }
      }, {
        "uid" : "827bd3401eb7b1a4",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/19/allure/#testresult/827bd3401eb7b1a4",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589113054099,
          "stop" : 1589113055726,
          "duration" : 1627
        }
      }, {
        "uid" : "9cb184ed7bd6ed64",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/18/allure/#testresult/9cb184ed7bd6ed64",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1588853652460,
          "stop" : 1588853653365,
          "duration" : 905
        }
      }, {
        "uid" : "ab9b0b53fee1c7d7",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/17/allure/#testresult/ab9b0b53fee1c7d7",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1588852332490,
          "stop" : 1588852333939,
          "duration" : 1449
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bfcdc1b06c5bcf3.json",
  "parameterValues" : [ ]
}