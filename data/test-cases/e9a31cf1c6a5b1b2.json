{
  "uid" : "e9a31cf1c6a5b1b2",
  "name" : "test_contactUsLink",
  "fullName" : "test_regression_suite.FooterTests#test_contactUsLink",
  "historyId" : "f96e1be7f4eab5e1c56d22dc6b1a0d37",
  "time" : {
    "start" : 1589206268568,
    "stop" : 1589206269502,
    "duration" : 934
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_contactUsLink>\n\n    def test_contactUsLink(self):\n        result = self.fp.getContactUsLinkStatus()\n>       self.ts.markFinal(\"test_contactUsLink\", result, \"Footer_Verified Contact Us Link\")\n\nhome\\footer_test.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utilities.casestatus.CaseStatus object at 0x02F43910>\ntestName = 'test_contactUsLink', result = False\nresultMessage = 'Footer_Verified Contact Us Link'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName + \" Test Failed\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\utilities\\casestatus.py:74: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "oneTimeSetUp",
    "time" : {
      "start" : 1589206243967,
      "stop" : 1589206266642,
      "duration" : 22675
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "classSetUp",
    "time" : {
      "start" : 1589206268567,
      "stop" : 1589206268567,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1589206243967,
      "stop" : 1589206243967,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1589206243967,
      "stop" : 1589206243967,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_contactUsLink>\n\n    def test_contactUsLink(self):\n        result = self.fp.getContactUsLinkStatus()\n>       self.ts.markFinal(\"test_contactUsLink\", result, \"Footer_Verified Contact Us Link\")\n\nhome\\footer_test.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utilities.casestatus.CaseStatus object at 0x02F43910>\ntestName = 'test_contactUsLink', result = False\nresultMessage = 'Footer_Verified Contact Us Link'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName + \" Test Failed\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\utilities\\casestatus.py:74: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e8ff8296f1ad32fe",
      "name" : "Footer_Verified Contact Us Link.1589206269500",
      "source" : "e8ff8296f1ad32fe.png",
      "type" : "image/png",
      "size" : 40915
    }, {
      "uid" : "b8feac363f2feb5f",
      "name" : "log",
      "source" : "b8feac363f2feb5f.txt",
      "type" : "text/plain",
      "size" : 1431
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "oneTimeSetUp::0",
    "time" : {
      "start" : 1589206292008,
      "stop" : 1589206294185,
      "duration" : 2177
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1589206294193,
      "stop" : 1589206294193,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_regression_suite"
  }, {
    "name" : "subSuite",
    "value" : "FooterTests"
  }, {
    "name" : "host",
    "value" : "EXIPC0154"
  }, {
    "name" : "thread",
    "value" : "15428-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_regression_suite"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "820be8be1cef9cfa",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589205343784,
        "stop" : 1589205344843,
        "duration" : 1059
      }
    }, {
      "uid" : "8c778adfb782c634",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589203293271,
        "stop" : 1589203294523,
        "duration" : 1252
      }
    }, {
      "uid" : "d88cad716155a3e",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589163786362,
        "stop" : 1589163787392,
        "duration" : 1030
      }
    }, {
      "uid" : "e63c153a46b40a48",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589113052644,
        "stop" : 1589113053997,
        "duration" : 1353
      }
    }, {
      "uid" : "af19af8cc0949dab",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588853651310,
        "stop" : 1588853652275,
        "duration" : 965
      }
    }, {
      "uid" : "4f489b8019e5a5c8",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588852331217,
        "stop" : 1588852332384,
        "duration" : 1167
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 7,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "29fd0b289812075c",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/22/allure/#testresult/29fd0b289812075c",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589205343784,
          "stop" : 1589205344843,
          "duration" : 1059
        }
      }, {
        "uid" : "e8fce1f0aed6476",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/21/allure/#testresult/e8fce1f0aed6476",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589203293271,
          "stop" : 1589203294523,
          "duration" : 1252
        }
      }, {
        "uid" : "32e9d08929afe41",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/20/allure/#testresult/32e9d08929afe41",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589163786362,
          "stop" : 1589163787392,
          "duration" : 1030
        }
      }, {
        "uid" : "991877c8abd335c7",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/19/allure/#testresult/991877c8abd335c7",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589113052644,
          "stop" : 1589113053997,
          "duration" : 1353
        }
      }, {
        "uid" : "6e90f6944034549e",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/18/allure/#testresult/6e90f6944034549e",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1588853651310,
          "stop" : 1588853652275,
          "duration" : 965
        }
      }, {
        "uid" : "6e7a41d2143ba130",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/17/allure/#testresult/6e7a41d2143ba130",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1588852331217,
          "stop" : 1588852332384,
          "duration" : 1167
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e9a31cf1c6a5b1b2.json",
  "parameterValues" : [ ]
}