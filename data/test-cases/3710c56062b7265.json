{
  "uid" : "3710c56062b7265",
  "name" : "test_forMediaLink",
  "fullName" : "test_regression_suite.FooterTests#test_forMediaLink",
  "historyId" : "3e0487e61a0db898bf2e62b770de25ce",
  "time" : {
    "start" : 1590654627965,
    "stop" : 1590654652029,
    "duration" : 24064
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: chrome not reachable\n  (Session info: chrome=81.0.4044.138)",
  "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_forMediaLink>\n\n    def setUp(self):\n>       self.fp.scrollToFooter()\n\nhome\\footer_test.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\home\\footer_page.py:36: in scrollToFooter\n    self.webScroll(element=element)\n..\\base\\selenium_driver.py:283: in webScroll\n    self.driver.execute_script(\"window.scrollBy(0, -1000);\")\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:634: in execute_script\n    return self.execute(command, {\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000251D01CEE50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"chrome not reachable\",\"message\":\"chrome not reachable\\\\n  (Session info: ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77BC7B74+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77BC7B44+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: chrome not reachable\nE         (Session info: chrome=81.0.4044.138)\n\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "oneTimeSetUp",
    "time" : {
      "start" : 1590654488360,
      "stop" : 1590654502392,
      "duration" : 14032
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "classSetUp",
    "time" : {
      "start" : 1590654627963,
      "stop" : 1590654627963,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1590654488359,
      "stop" : 1590654488360,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1590654488360,
      "stop" : 1590654488360,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: chrome not reachable\n  (Session info: chrome=81.0.4044.138)",
    "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_forMediaLink>\n\n    def setUp(self):\n>       self.fp.scrollToFooter()\n\nhome\\footer_test.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\home\\footer_page.py:36: in scrollToFooter\n    self.webScroll(element=element)\n..\\base\\selenium_driver.py:283: in webScroll\n    self.driver.execute_script(\"window.scrollBy(0, -1000);\")\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:634: in execute_script\n    return self.execute(command, {\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000251D01CEE50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"chrome not reachable\",\"message\":\"chrome not reachable\\\\n  (Session info: ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77BC7B74+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77BC7B44+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: chrome not reachable\nE         (Session info: chrome=81.0.4044.138)\n\n..\\..\\..\\pycharmprojects\\mattamyhomes\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8106a786e7e5069e",
      "name" : "log",
      "source" : "8106a786e7e5069e.txt",
      "type" : "text/plain",
      "size" : 251
    }, {
      "uid" : "550773274b3f5bf7",
      "name" : "stdout",
      "source" : "550773274b3f5bf7.txt",
      "type" : "text/plain",
      "size" : 70
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "oneTimeSetUp::0",
    "time" : {
      "start" : 1590654870186,
      "stop" : 1590654872310,
      "duration" : 2124
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1590654872317,
      "stop" : 1590654872317,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_regression_suite"
  }, {
    "name" : "subSuite",
    "value" : "FooterTests"
  }, {
    "name" : "host",
    "value" : "EXIPC0154"
  }, {
    "name" : "thread",
    "value" : "2720-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_regression_suite"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "9fee3ea3a06af7e1",
      "status" : "passed",
      "time" : {
        "start" : 1590568867726,
        "stop" : 1590568869407,
        "duration" : 1681
      }
    }, {
      "uid" : "ff49a9aa83777b81",
      "status" : "passed",
      "time" : {
        "start" : 1590405782183,
        "stop" : 1590405783284,
        "duration" : 1101
      }
    }, {
      "uid" : "10a26257e799f0c0",
      "status" : "passed",
      "time" : {
        "start" : 1590404493999,
        "stop" : 1590404495894,
        "duration" : 1895
      }
    }, {
      "uid" : "ee4def11aa835790",
      "status" : "passed",
      "time" : {
        "start" : 1590404431081,
        "stop" : 1590404432556,
        "duration" : 1475
      }
    }, {
      "uid" : "ce63b3256ae30b92",
      "status" : "passed",
      "time" : {
        "start" : 1589610660913,
        "stop" : 1589610662396,
        "duration" : 1483
      }
    }, {
      "uid" : "6f5eaed90951f309",
      "status" : "passed",
      "time" : {
        "start" : 1589609669219,
        "stop" : 1589609671755,
        "duration" : 2536
      }
    }, {
      "uid" : "89927096efbda59d",
      "status" : "passed",
      "time" : {
        "start" : 1589609418820,
        "stop" : 1589609420248,
        "duration" : 1428
      }
    }, {
      "uid" : "b708f796f876ad35",
      "status" : "passed",
      "time" : {
        "start" : 1589608958587,
        "stop" : 1589608959791,
        "duration" : 1204
      }
    }, {
      "uid" : "95ae03ae14284a84",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: 'chromedriver.exe' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home",
      "time" : {
        "start" : 1589607868341,
        "stop" : 1589607868341,
        "duration" : 0
      }
    }, {
      "uid" : "b3488cb19897de86",
      "status" : "passed",
      "time" : {
        "start" : 1589606494575,
        "stop" : 1589606495861,
        "duration" : 1286
      }
    }, {
      "uid" : "564e894b4e32f005",
      "status" : "passed",
      "time" : {
        "start" : 1589597894780,
        "stop" : 1589597896496,
        "duration" : 1716
      }
    }, {
      "uid" : "4a620e92c368ec6a",
      "status" : "passed",
      "time" : {
        "start" : 1589596680264,
        "stop" : 1589596681544,
        "duration" : 1280
      }
    }, {
      "uid" : "101c9c528453bbef",
      "status" : "passed",
      "time" : {
        "start" : 1589534507914,
        "stop" : 1589534509679,
        "duration" : 1765
      }
    }, {
      "uid" : "b435ed461cf28dd7",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589469142440,
        "stop" : 1589469144802,
        "duration" : 2362
      }
    }, {
      "uid" : "242a67aafea595b7",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589386781456,
        "stop" : 1589386782536,
        "duration" : 1080
      }
    }, {
      "uid" : "bba2a589fe95fdc0",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589272053772,
        "stop" : 1589272054874,
        "duration" : 1102
      }
    }, {
      "uid" : "716899e6fb991e31",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589258677467,
        "stop" : 1589258678362,
        "duration" : 895
      }
    }, {
      "uid" : "a8f38d9f4bf4657e",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589258565993,
        "stop" : 1589258567017,
        "duration" : 1024
      }
    }, {
      "uid" : "fd46f34b139793a7",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589255119512,
        "stop" : 1589255120536,
        "duration" : 1024
      }
    }, {
      "uid" : "3cea338a9ff84fcc",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589253204203,
        "stop" : 1589253205094,
        "duration" : 891
      }
    }, {
      "uid" : "8e6f9fadf16c604b",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589216118805,
        "stop" : 1589216119577,
        "duration" : 772
      }
    }, {
      "uid" : "ba541e666339816c",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589207724428,
        "stop" : 1589207725405,
        "duration" : 977
      }
    }, {
      "uid" : "5faee65c82862aae",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589206273417,
        "stop" : 1589206274446,
        "duration" : 1029
      }
    }, {
      "uid" : "fc0271825b78c228",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589205348950,
        "stop" : 1589205350471,
        "duration" : 1521
      }
    }, {
      "uid" : "bd7ea74f3a08a270",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589203298551,
        "stop" : 1589203299907,
        "duration" : 1356
      }
    }, {
      "uid" : "2387b3a2d544e232",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589163790881,
        "stop" : 1589163791847,
        "duration" : 966
      }
    }, {
      "uid" : "7688204e6e7ccdbd",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589113058853,
        "stop" : 1589113060288,
        "duration" : 1435
      }
    }, {
      "uid" : "44b718f89e33da85",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588853661332,
        "stop" : 1588853662237,
        "duration" : 905
      }
    }, {
      "uid" : "77bdd74adb8c5b1c",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588852336341,
        "stop" : 1588852337438,
        "duration" : 1097
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 15,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 30
      },
      "items" : [ {
        "uid" : "7e480e90dc6e917",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/48/allure/#testresult/7e480e90dc6e917",
        "status" : "passed",
        "time" : {
          "start" : 1590568867726,
          "stop" : 1590568869407,
          "duration" : 1681
        }
      }, {
        "uid" : "1dd46da2b8fa25de",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/47/allure/#testresult/1dd46da2b8fa25de",
        "status" : "passed",
        "time" : {
          "start" : 1590405782183,
          "stop" : 1590405783284,
          "duration" : 1101
        }
      }, {
        "uid" : "d38811a3b7f3cf8b",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/46/allure/#testresult/d38811a3b7f3cf8b",
        "status" : "passed",
        "time" : {
          "start" : 1590405782183,
          "stop" : 1590405783284,
          "duration" : 1101
        }
      }, {
        "uid" : "1a5e36fc880b5c58",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/45/allure/#testresult/1a5e36fc880b5c58",
        "status" : "passed",
        "time" : {
          "start" : 1590404493999,
          "stop" : 1590404495894,
          "duration" : 1895
        }
      }, {
        "uid" : "49ef51bbbcfea365",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/43/allure/#testresult/49ef51bbbcfea365",
        "status" : "passed",
        "time" : {
          "start" : 1589610660913,
          "stop" : 1589610662396,
          "duration" : 1483
        }
      }, {
        "uid" : "65b8ca80c41a6ae9",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/42/allure/#testresult/65b8ca80c41a6ae9",
        "status" : "passed",
        "time" : {
          "start" : 1589610660913,
          "stop" : 1589610662396,
          "duration" : 1483
        }
      }, {
        "uid" : "d2743296efe896d4",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/41/allure/#testresult/d2743296efe896d4",
        "status" : "passed",
        "time" : {
          "start" : 1589609669219,
          "stop" : 1589609671755,
          "duration" : 2536
        }
      }, {
        "uid" : "fa28adcb5dcddc7a",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/40/allure/#testresult/fa28adcb5dcddc7a",
        "status" : "passed",
        "time" : {
          "start" : 1589609418820,
          "stop" : 1589609420248,
          "duration" : 1428
        }
      }, {
        "uid" : "94d0754f26795320",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/39/allure/#testresult/94d0754f26795320",
        "status" : "passed",
        "time" : {
          "start" : 1589608958587,
          "stop" : 1589608959791,
          "duration" : 1204
        }
      }, {
        "uid" : "807f27fca2ab31be",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/37/allure/#testresult/807f27fca2ab31be",
        "status" : "passed",
        "time" : {
          "start" : 1589606494575,
          "stop" : 1589606495861,
          "duration" : 1286
        }
      }, {
        "uid" : "cfc111f8c091fcf8",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/36/allure/#testresult/cfc111f8c091fcf8",
        "status" : "passed",
        "time" : {
          "start" : 1589597894780,
          "stop" : 1589597896496,
          "duration" : 1716
        }
      }, {
        "uid" : "e6c4dd6e3cc7090b",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/35/allure/#testresult/e6c4dd6e3cc7090b",
        "status" : "passed",
        "time" : {
          "start" : 1589596680264,
          "stop" : 1589596681544,
          "duration" : 1280
        }
      }, {
        "uid" : "e26712bcba1edb0",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/34/allure/#testresult/e26712bcba1edb0",
        "status" : "passed",
        "time" : {
          "start" : 1589534507914,
          "stop" : 1589534509679,
          "duration" : 1765
        }
      }, {
        "uid" : "1bcf3742fb6a55f7",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/33/allure/#testresult/1bcf3742fb6a55f7",
        "status" : "passed",
        "time" : {
          "start" : 1589534507914,
          "stop" : 1589534509679,
          "duration" : 1765
        }
      }, {
        "uid" : "4b622bb9d4c92119",
        "reportUrl" : "http://localhost:9090/jenkins/job/MattamyAutomationFramework/32/allure/#testresult/4b622bb9d4c92119",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589469142440,
          "stop" : 1589469144802,
          "duration" : 2362
        }
      }, {
        "uid" : "3e92fedbc8c34de5",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/31/allure/#testresult/3e92fedbc8c34de5",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589386781456,
          "stop" : 1589386782536,
          "duration" : 1080
        }
      }, {
        "uid" : "4a2ec733cb77b31b",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/30/allure/#testresult/4a2ec733cb77b31b",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589272053772,
          "stop" : 1589272054874,
          "duration" : 1102
        }
      }, {
        "uid" : "ddaa363f379df037",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/28/allure/#testresult/ddaa363f379df037",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589258565993,
          "stop" : 1589258567017,
          "duration" : 1024
        }
      }, {
        "uid" : "baeff548be4b81a3",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/27/allure/#testresult/baeff548be4b81a3",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589255119512,
          "stop" : 1589255120536,
          "duration" : 1024
        }
      }, {
        "uid" : "335e4ab9a4b0e02f",
        "reportUrl" : "http://localhost:8080/job/MattamyAutomationFramework/26/allure/#testresult/335e4ab9a4b0e02f",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589253204203,
          "stop" : 1589253205094,
          "duration" : 891
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3710c56062b7265.json",
  "parameterValues" : [ ]
}