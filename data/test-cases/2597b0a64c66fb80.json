{
  "uid" : "2597b0a64c66fb80",
  "name" : "test_termsAndConditionsLink",
  "fullName" : "test_regression_suite.FooterTests#test_termsAndConditionsLink",
  "historyId" : "4ea23e64cc3562a3f3e8a52950e2c5ea",
  "time" : {
    "start" : 1589216129859,
    "stop" : 1589216130639,
    "duration" : 780
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_termsAndConditionsLink>\n\n    def test_termsAndConditionsLink(self):\n        result = self.fp.getTnCLinkStatus()\n>       self.ts.markFinal(\"test_termsAndConditionsLink\", result, \"Footer_Verified TnC Link\")\n\nhome\\footer_test.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utilities.casestatus.CaseStatus object at 0x036618F0>\ntestName = 'test_termsAndConditionsLink', result = False\nresultMessage = 'Footer_Verified TnC Link'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName + \" Test Failed\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\utilities\\casestatus.py:74: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1589216088381,
      "stop" : 1589216088381,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "classSetUp",
    "time" : {
      "start" : 1589216129858,
      "stop" : 1589216129858,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "oneTimeSetUp",
    "time" : {
      "start" : 1589216088381,
      "stop" : 1589216112484,
      "duration" : 24103
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1589216088381,
      "stop" : 1589216088381,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <tests.home.footer_test.FooterTests testMethod=test_termsAndConditionsLink>\n\n    def test_termsAndConditionsLink(self):\n        result = self.fp.getTnCLinkStatus()\n>       self.ts.markFinal(\"test_termsAndConditionsLink\", result, \"Footer_Verified TnC Link\")\n\nhome\\footer_test.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utilities.casestatus.CaseStatus object at 0x036618F0>\ntestName = 'test_termsAndConditionsLink', result = False\nresultMessage = 'Footer_Verified TnC Link'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName + \" Test Failed\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\utilities\\casestatus.py:74: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e2a624ec786cf35e",
      "name" : "Footer_Verified TnC Link.1589216130637",
      "source" : "e2a624ec786cf35e.png",
      "type" : "image/png",
      "size" : 40934
    }, {
      "uid" : "5527969aeb1983e7",
      "name" : "log",
      "source" : "5527969aeb1983e7.txt",
      "type" : "text/plain",
      "size" : 1442
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1589216134527,
      "stop" : 1589216134527,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "oneTimeSetUp::0",
    "time" : {
      "start" : 1589216132336,
      "stop" : 1589216134519,
      "duration" : 2183
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_regression_suite"
  }, {
    "name" : "subSuite",
    "value" : "FooterTests"
  }, {
    "name" : "host",
    "value" : "EXIPC0154"
  }, {
    "name" : "thread",
    "value" : "880-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_regression_suite"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "d4eeededcf3280c3",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589207740345,
        "stop" : 1589207741295,
        "duration" : 950
      }
    }, {
      "uid" : "69852a55308b5e60",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589206289678,
        "stop" : 1589206290654,
        "duration" : 976
      }
    }, {
      "uid" : "85a8242f374421",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589205362651,
        "stop" : 1589205363669,
        "duration" : 1018
      }
    }, {
      "uid" : "2dafc29f605df9b8",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589203310487,
        "stop" : 1589203311261,
        "duration" : 774
      }
    }, {
      "uid" : "650b8badf1babfb",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589163803637,
        "stop" : 1589163804509,
        "duration" : 872
      }
    }, {
      "uid" : "bf0f4417d258b206",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1589113072807,
        "stop" : 1589113074341,
        "duration" : 1534
      }
    }, {
      "uid" : "218da5cf3735c0c2",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588853679561,
        "stop" : 1588853680463,
        "duration" : 902
      }
    }, {
      "uid" : "478f5b84c146d5d4",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1588852353714,
        "stop" : 1588852354698,
        "duration" : 984
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 9,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "9d812e4301e3ec78",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/24/allure/#testresult/9d812e4301e3ec78",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589207740345,
          "stop" : 1589207741295,
          "duration" : 950
        }
      }, {
        "uid" : "bc17200ab1882eab",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/23/allure/#testresult/bc17200ab1882eab",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589206289678,
          "stop" : 1589206290654,
          "duration" : 976
        }
      }, {
        "uid" : "d24252cd3a7cf877",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/22/allure/#testresult/d24252cd3a7cf877",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589205362651,
          "stop" : 1589205363669,
          "duration" : 1018
        }
      }, {
        "uid" : "10a0c85d889aedc2",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/21/allure/#testresult/10a0c85d889aedc2",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589203310487,
          "stop" : 1589203311261,
          "duration" : 774
        }
      }, {
        "uid" : "e33f3bb8669f6cd8",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/20/allure/#testresult/e33f3bb8669f6cd8",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589163803637,
          "stop" : 1589163804509,
          "duration" : 872
        }
      }, {
        "uid" : "2a5222b01e55d409",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/19/allure/#testresult/2a5222b01e55d409",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1589113072807,
          "stop" : 1589113074341,
          "duration" : 1534
        }
      }, {
        "uid" : "d32b9344bd97f086",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/18/allure/#testresult/d32b9344bd97f086",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1588853679561,
          "stop" : 1588853680463,
          "duration" : 902
        }
      }, {
        "uid" : "2e137df07deac12",
        "reportUrl" : "http://localhost:8080/job/MattamyHomes/17/allure/#testresult/2e137df07deac12",
        "status" : "failed",
        "statusDetails" : "AssertionError",
        "time" : {
          "start" : 1588852353714,
          "stop" : 1588852354698,
          "duration" : 984
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2597b0a64c66fb80.json",
  "parameterValues" : [ ]
}